{"version":3,"sources":["ConstellationList.js","api-endpoint.js","StarList.js","App.js","serviceWorker.js","index.js"],"names":["ConstellationList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedConstellation","_this2","loading","react_default","a","createElement","constellations","map","constellation","ConstellationList_ConstellationListItem","key","name","className","starCount","onClick","onSelected","setState","Component","ConstellationListItem","_this3","style","BASE_URL","StarList","selectedStar","stars","star","StarList_StarListItem","starName","StarListItem","minimaCount","StarMinimaChart","d","kind","methodValue","color","_this4","minima","forEach","type","cValue","primary","oc","ocCalc","secondary","height","width","marginTop","lib_default","option","getOption","overflow","title","tooltip","legend","orient","bottom","dataset","dimensions","source","grid","right","left","top","xAxis","scale","yAxis","dataZoom","filterMode","showDataShadow","visualMap","categories","inRange","p - CCD / photoelectric","p - visual","p - photographic","s - CCD / photoelectric","s - visual","s - photographic","symbolSize","animation","series","itemStyle","opacity","encode","x","y","method","element","e","Math","round","julianDate","minimum0","period","StarDetail","_Component4","apply","arguments","inherits","createClass","value","primaryElement","secondaryElement","elements","display","flexDirection","maxHeight","paddingLeft","flex","marginBottom","padding","coordinatesToString","coordinates","el","id","printKind","minimum9","brightness","bright","maxP","minP","minS","StarList_StarMinimaChart","coords","concat","raHours","raMinutes","raSeconds","decSign","decDegrees","decMinutes","decSeconds","App","objectSpread","constellationsLoading","fetch","then","response","json","starsLoading","starLoading","starId","_this5","src_ConstellationList_0","onConstellationSelected","src_StarList_0","onStarSelected","StarList_StarDetail","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16e81b73.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './ConstellationList.css';\r\n\r\nclass ConstellationList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedConstellation: null};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <span>Loading...</span>\r\n            );\r\n        }\r\n        if (this.props.constellations) {\r\n            return (\r\n                <ul>\r\n                    {this.props.constellations.map(constellation => {\r\n                        return (\r\n                            <ConstellationListItem key={constellation.name} className={this.state.selectedConstellation === constellation.name ? \"selected\" : \"\"} name={constellation.name} starCount={constellation.starCount} onClick={(name) => this.onSelected(name)}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    <li>Loading constellations</li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    onSelected(constellation) {\r\n        if (this.props.onSelected) {\r\n            this.props.onSelected(constellation);\r\n        }\r\n        this.setState({selectedConstellation: constellation});\r\n    }\r\n}\r\n\r\nclass ConstellationListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li style={this.props.style} className={this.props.className} onClick={() => this.onClick()}>{this.props.name} ({this.props.starCount})</li>\r\n        )\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.name);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ConstellationList;\r\n","export const BASE_URL = 'http://localhost:8080/api';\r\n","import React, {Component} from 'react';\r\nimport './StarList.css';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\n\r\nclass StarList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedStar: null};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <span>Loading...</span>\r\n            );\r\n        }\r\n        if (this.props.stars) {\r\n            return (\r\n                <ul>\r\n                    {this.props.stars.map(star => {\r\n                        return (\r\n                            <StarListItem key={star.starName}\r\n                                          className={this.state.selectedStar === star ? \"selected\" : \"\"} star={star}\r\n                                          onClick={(name) => this.onSelected(name)}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    <li>Loading stars</li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    onSelected(star) {\r\n        if (this.props.onSelected) {\r\n            this.props.onSelected(star);\r\n        }\r\n        this.setState({selectedStar: star});\r\n    }\r\n}\r\n\r\nclass StarListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li style={this.props.style} className={this.props.className}\r\n                onClick={() => this.onClick()}>{this.props.star.starName} ({this.props.star.minimaCount})</li>\r\n        )\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.star);\r\n        }\r\n    }\r\n}\r\n\r\nclass StarMinimaChart extends Component {\r\n    static methodValue(method) {\r\n        if (method === \"pg\") {\r\n            return \"photographic\";\r\n        } else if (method === \"vis\") {\r\n            return \"visual\";\r\n        } else {\r\n            return \"CCD / photoelectric\";\r\n        }\r\n    };\r\n\r\n    cValue(d) {\r\n        return d.kind + \" - \" + StarMinimaChart.methodValue(d.color);\r\n    };\r\n\r\n    static ocCalc(element, minima) {\r\n        let e = Math.round((minima.julianDate - element.minimum0) / element.period);\r\n        let oc = minima.julianDate - (element.minimum0 + element.period * e);\r\n        return oc;\r\n    };\r\n\r\n    render() {\r\n        if (this.props.minima) {\r\n\r\n            this.props.minima.forEach(minima => {\r\n                minima.type = this.cValue(minima);\r\n                if (minima.kind === 'p' && this.props.primary) {\r\n                    minima.oc = StarMinimaChart.ocCalc(this.props.primary, minima)\r\n                }\r\n                if (minima.kind === 's' && this.props.secondary) {\r\n                    minima.oc = StarMinimaChart.ocCalc(this.props.secondary, minima)\r\n                }\r\n            });\r\n            return (\r\n                <div style={{height: 'calc(100% - 24px)', width: 'calc(100% - 12px)', marginTop: 12}}>\r\n                    <div className=\"panel\" style={{height: '100%', width: '100%'}}>\r\n                        <ReactEcharts\r\n                            option={this.getOption()}\r\n                            style={{overflow: 'hidden', height: '100%', width: '100%'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    getOption() {\r\n        return {\r\n            title: {},\r\n            tooltip: {},\r\n            legend: {\r\n                orient: 'horizontal',\r\n                bottom: 10,\r\n            },\r\n            dataset: {\r\n                dimensions: ['julianDate', 'oc', 'type'],\r\n                source: this.props.minima\r\n            },\r\n            grid: [\r\n                {\r\n                    right: 60, bottom: 110, left: 50, top: 30,\r\n                },\r\n            ],\r\n            xAxis: {\r\n                type: 'value',\r\n                scale: true,\r\n\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                scale: true,\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'inside',\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'slider',\r\n                    showDataShadow: false,\r\n                    bottom: 50,\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    orient: 'vertical',\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'slider',\r\n                    orient: 'vertical',\r\n                    showDataShadow: false,\r\n                    right: 20,\r\n                    filterMode: 'empty'\r\n                }\r\n            ],\r\n            visualMap: {\r\n                type: 'piecewise',\r\n                categories: ['p - CCD / photoelectric', 'p - visual', 'p - photographic', 's - CCD / photoelectric', 's - visual', 's - photographic'],\r\n                inRange: {\r\n                    color: {\r\n                        \"p - CCD / photoelectric\": \"#ba160c\",\r\n                        \"p - visual\": \"#0038a8\",\r\n                        \"p - photographic\": \"#eacc5d\",\r\n                        's - CCD / photoelectric': \"#d60270\",\r\n                        \"s - visual\": \"#9494ff\",\r\n                        \"s - photographic\": \"#00a8ff\"\r\n                    },\r\n                    symbolSize: [5, 7, 10, 5, 7, 10],\r\n                    // symbol: ['circle', 'rect', 'diamond', 'circle', 'rect', 'diamond']\r\n                },\r\n                bottom: 10,\r\n                orient: 'horizontal',\r\n                left: 'center'\r\n            },\r\n            animation: false,\r\n            series: [{\r\n                type: 'scatter',\r\n                symbolSize: 5,\r\n                itemStyle: {\r\n                    opacity: 0.8\r\n                },\r\n                encode: {\r\n                    x: 0,\r\n                    y: 1,\r\n                    tooltip: [0, 1, 2]\r\n                }\r\n            }]\r\n        };\r\n    }\r\n}\r\n\r\nexport class StarDetail extends Component {\r\n    static printKind(kind) {\r\n        return kind === 'p' ? 'Primary' : 'Secondary';\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <span>Loading...</span>\r\n            );\r\n        }\r\n        if (this.props.star) {\r\n            const star = this.props.star;\r\n            let primaryElement, secondaryElement;\r\n            star.elements.forEach(e => {\r\n                if (e.kind === 'p') {\r\n                    primaryElement = e;\r\n                } else if (e.kind === 's') {\r\n                    secondaryElement = e;\r\n                }\r\n            });\r\n            return (\r\n                <div className=\"star-detail-container\" style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"100%\",\r\n                    paddingLeft: 12\r\n                }}>\r\n                    <h3 style={{flex: \"0 0 auto\"}}>{star.starName} {star.constellation}</h3>\r\n                    <div style={{display: 'flex', flex: \"0 0 auto\", marginBottom: 12}}>\r\n                        <div className=\"panel\" style={{padding: 8}}>\r\n                            <div><b>Coordinates</b></div>\r\n                            <div>{this.coordinatesToString(star.coordinates)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"star-detail-wrapper\">\r\n                        {star.elements.map(el => {\r\n                            return (\r\n                                <div className=\"star-detail panel\" key={el.id}>\r\n                                    <div><b>{StarDetail.printKind(el.kind)}</b></div>\r\n                                    <div><b>M0: </b>{el.minimum0}</div>\r\n                                    <div><b>M9: </b>{el.minimum9}</div>\r\n                                    <div><b>Period: </b>{el.period}</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {star.brightness.map(bright => {\r\n                            return (\r\n                                <div className=\"star-detail panel\" key={bright.id}>\r\n                                    <div><b>Brightness</b></div>\r\n                                    <div><b>Max P: </b>{bright.maxP}</div>\r\n                                    <div><b>Min P: </b>{bright.minP}</div>\r\n                                    <div><b>Min S: </b>{bright.minS}</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div style={{flex: \"1\"}}>\r\n                        <StarMinimaChart minima={star.minima} primary={primaryElement} secondary={secondaryElement}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    coordinatesToString(coords) {\r\n        return `${coords.raHours}:${coords.raMinutes}:${coords.raSeconds} ${coords.decSign}${coords.decDegrees}:${coords.decMinutes}:${coords.decSeconds}`;\r\n    }\r\n}\r\n\r\nexport default StarList;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport ConstellationList from \"./ConstellationList\";\nimport {BASE_URL} from \"./api-endpoint\";\nimport StarList, {StarDetail} from \"./StarList\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {constellations: [], stars: [], selectedStar: null};\n    }\n\n    componentDidMount() {\n        this.setState({...this.state, constellationsLoading: true});\n        fetch(BASE_URL + \"/constellations\").then(response => response.json())\n            .then(value => this.setState({constellations: value, stars: [], selectedStar: null, constellationsLoading: false}));\n    }\n\n    onConstellationSelected(constellation) {\n        this.setState({...this.state, starsLoading: true});\n        fetch(BASE_URL + \"/constellations/\" + constellation + \"/stars\").then(response => response.json())\n            .then(value => this.setState({...this.state, stars: value, starsLoading: false}));\n    }\n\n    onStarSelected(star) {\n        this.setState({...this.state, starLoading: true});\n        fetch(BASE_URL + \"/stars/\" + star.starId).then(response => response.json()).then(value => {\n            this.setState({...this.state, selectedStar: value, starLoading: false});\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"sidebar-wrapper\">\n                    <div className=\"sidebar\">\n                        <ConstellationList constellations={this.state.constellations} onSelected={constellation => this.onConstellationSelected(constellation)} loading={this.state.constellationsLoading}/>\n                    </div>\n                    <div className=\"sidebar\">\n                        <StarList stars={this.state.stars} onSelected={star => this.onStarSelected(star)} loading={this.state.starsLoading}/>\n                    </div>\n                </div>\n                <div className=\"stars-detail-wrapper\">\n                    <StarDetail star={this.state.selectedStar} loading={this.state.starLoading}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}