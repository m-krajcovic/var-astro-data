{"version":3,"sources":["ConstellationList.js","StarList.js","App.js","serviceWorker.js","index.js"],"names":["ConstellationList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedConstellation","_this2","constellations","react_default","a","createElement","map","constellation","ConstellationList_ConstellationListItem","key","name","className","starCount","onClick","onSelected","setState","Component","ConstellationListItem","_this3","style","StarList","selectedStar","stars","star","StarList_StarListItem","starName","StarListItem","minimaCount","StarMinimaChart","minima","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","forEach","cat","d","kind","method","color","cValue","type","lib_default","option","getOption","overflow","height","width","title","tooltip","legend","orient","bottom","dataset","dimensions","source","grid","right","left","top","xAxis","scale","yAxis","dataZoom","filterMode","showDataShadow","visualMap","categories","inRange","p - CCD / photoelectric","p - visual","p - photographic","s - CCD / photoelectric","s - visual","s - photographic","symbolSize","animation","series","itemStyle","opacity","encode","x","y","StarDetail","_Component4","apply","arguments","inherits","createClass","value","display","flexDirection","maxHeight","paddingLeft","flex","coordinatesToString","coordinates","elements","el","id","minimum0","minimum9","period","brightness","bright","maxP","minP","minS","StarList_StarMinimaChart","coords","concat","raHours","raMinutes","raSeconds","decSign","decDegrees","decMinutes","decSeconds","App","fetch","BASE_URL","then","response","json","objectSpread","_this4","starId","_this5","src_ConstellationList_0","onConstellationSelected","src_StarList_0","onStarSelected","StarList_StarDetail","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61c8486d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './ConstellationList.css';\r\n\r\nclass ConstellationList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedConstellation: null};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.constellations) {\r\n            return (\r\n                <ul>\r\n                    {this.props.constellations.map(constellation => {\r\n                        return (\r\n                            <ConstellationListItem key={constellation.name} className={this.state.selectedConstellation === constellation.name ? \"selected\" : \"\"} name={constellation.name} starCount={constellation.starCount} onClick={(name) => this.onSelected(name)}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    <li>Loading constellations</li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    onSelected(constellation) {\r\n        if (this.props.onSelected) {\r\n            this.props.onSelected(constellation);\r\n        }\r\n        this.setState({selectedConstellation: constellation});\r\n    }\r\n}\r\n\r\nclass ConstellationListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li style={[this.props.style]} className={this.props.className} onClick={() => this.onClick()}>{this.props.name} ({this.props.starCount})</li>\r\n        )\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.name);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ConstellationList;\r\n","import React, {Component} from 'react';\r\nimport './StarList.css';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\n\r\nclass StarList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedStar: null};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.stars) {\r\n            return (\r\n                <ul>\r\n                    {this.props.stars.map(star => {\r\n                        return (\r\n                            <StarListItem key={star.starName}\r\n                                          className={this.state.selectedStar === star ? \"selected\" : \"\"} star={star}\r\n                                          onClick={(name) => this.onSelected(name)}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    <li>Loading stars</li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    onSelected(star) {\r\n        if (this.props.onSelected) {\r\n            this.props.onSelected(star);\r\n        }\r\n        this.setState({selectedStar: star});\r\n    }\r\n}\r\n\r\nclass StarListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li style={[this.props.style]} className={this.props.className}\r\n                onClick={() => this.onClick()}>{this.props.star.starName} ({this.props.star.minimaCount})</li>\r\n        )\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.star);\r\n        }\r\n    }\r\n}\r\n\r\nclass StarMinimaChart extends Component {\r\n\r\n    render() {\r\n        if (this.props.minima) {\r\n            const methodValue = function (method) {\r\n                if (method === \"pg\") {\r\n                    return \"photographic\";\r\n                } else if (method === \"vis\") {\r\n                    return \"visual\";\r\n                } else {\r\n                    return \"CCD / photoelectric\";\r\n                }\r\n            };\r\n            const cValue = function (d) {\r\n                return d.kind + \" - \" + methodValue(d.color);\r\n            };\r\n            const groupCache = {};\r\n            let xMin = Number.MAX_SAFE_INTEGER, xMax = Number.MIN_SAFE_INTEGER, yMin = Number.MAX_SAFE_INTEGER,\r\n                yMax = Number.MIN_SAFE_INTEGER;\r\n            this.props.minima.forEach(minima => {\r\n                const cat = cValue(minima);\r\n                minima.type = cat;\r\n            });\r\n            const colors = {\r\n                \"p - CCD / photoelectric\": \"#ba160c\",\r\n                \"p - visual\": \"#0038a8\",\r\n                \"s - CCD / photoelectric\": \"#d60270\",\r\n                \"p - photographic\": \"#eacc5d\",\r\n                \"s - visual\": \"#9494ff\",\r\n                \"s - photographic\": \"#00a8ff\"\r\n            };\r\n            const margin = {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 50,\r\n                left: 60\r\n            };\r\n\r\n            return (\r\n                <ReactEcharts\r\n                    option={this.getOption()}\r\n                    style={{overflow: 'hidden', height: '100%', width: '100%'}}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    getOption() {\r\n        return {\r\n            title: {\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                orient: 'horizontal',\r\n                bottom: 10,\r\n            },\r\n            dataset: {\r\n                dimensions: ['julianDate', 'oc', 'type'],\r\n                source: this.props.minima\r\n            },\r\n            grid: [\r\n                {\r\n                    right: 60, bottom: 110, left: 50, top: 30,\r\n                },\r\n            ],\r\n            xAxis: {\r\n                type: 'value',\r\n                scale: true,\r\n\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                scale: true,\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'inside',\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'slider',\r\n                    showDataShadow: false,\r\n                    bottom: 50,\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    orient: 'vertical',\r\n                    filterMode: 'empty'\r\n                },\r\n                {\r\n                    type: 'slider',\r\n                    orient: 'vertical',\r\n                    showDataShadow: false,\r\n                    right: 20,\r\n                    filterMode: 'empty'\r\n                }\r\n            ],\r\n            visualMap: {\r\n                type: 'piecewise',\r\n                categories: ['p - CCD / photoelectric', 'p - visual', 'p - photographic', 's - CCD / photoelectric', 's - visual', 's - photographic'],\r\n                inRange: {\r\n                    color: {\r\n                        \"p - CCD / photoelectric\": \"#ba160c\",\r\n                        \"p - visual\": \"#0038a8\",\r\n                        \"p - photographic\": \"#eacc5d\",\r\n                        's - CCD / photoelectric': \"#d60270\",\r\n                        \"s - visual\": \"#9494ff\",\r\n                        \"s - photographic\": \"#00a8ff\"\r\n                    },\r\n                    symbolSize: [5, 7, 10, 5, 7, 10],\r\n                    // symbol: ['circle', 'rect', 'diamond', 'circle', 'rect', 'diamond']\r\n                },\r\n                bottom: 10,\r\n                orient: 'horizontal',\r\n                left: 'center'\r\n            },\r\n            animation: false,\r\n            series : [{\r\n                type: 'scatter',\r\n                symbolSize: 5,\r\n                itemStyle: {\r\n                    opacity: 0.8\r\n                },\r\n                encode: {\r\n                    x: 0,\r\n                    y: 1,\r\n                    tooltip: [0, 1, 2]\r\n                }\r\n            }]\r\n        };\r\n    }\r\n}\r\n\r\nexport class StarDetail extends Component {\r\n    render() {\r\n        if (this.props.star) {\r\n            const star = this.props.star;\r\n            return (\r\n                <div className=\"star-detail-container\" style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"100%\",\r\n                    paddingLeft: 12\r\n                }}>\r\n                    <h3 style={{flex: \"0 0 auto\"}}>{star.starName} {star.constellation}</h3>\r\n                    <div style={{flex: \"0 0 auto\"}}><b>Coordinates: </b>{this.coordinatesToString(star.coordinates)}\r\n                    </div>\r\n                    <div className=\"star-detail-wrapper\">\r\n                        {star.elements.map(el => {\r\n                            return (\r\n                                <div className=\"star-detail\" key={el.id}>\r\n                                    <div><b>Element {el.kind}</b></div>\r\n                                    <div><b>Minimum 0: </b>24{el.minimum0}</div>\r\n                                    <div><b>Minimum 9: </b>24{el.minimum9}</div>\r\n                                    <div><b>Period: </b>{el.period}</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {star.brightness.map(bright => {\r\n                            return (\r\n                                <div className=\"star-detail\" key={bright.id}>\r\n                                    <div><b>Brightness</b></div>\r\n                                    <div><b>Max P: </b>24{bright.maxP}</div>\r\n                                    <div><b>Min P: </b>24{bright.minP}</div>\r\n                                    <div><b>Min S: </b>{bright.minS}</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div style={{flex: \"1\"}}>\r\n                        <StarMinimaChart minima={star.minima}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    coordinatesToString(coords) {\r\n        return `${coords.raHours}:${coords.raMinutes}:${coords.raSeconds} ${coords.decSign}${coords.decDegrees}:${coords.decMinutes}:${coords.decSeconds}`;\r\n    }\r\n}\r\n\r\nexport default StarList;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport ConstellationList from \"./ConstellationList\";\nimport {BASE_URL} from \"./api-endpoint\";\nimport StarList, {StarDetail} from \"./StarList\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {constellations: [], stars: [], selectedStar: null};\n    }\n\n    componentDidMount() {\n        fetch(BASE_URL + \"/constellations\").then(response => response.json())\n            .then(value => this.setState({constellations: value, stars: [], selectedStar: null}));\n    }\n\n    onConstellationSelected(constellation) {\n        fetch(BASE_URL + \"/constellations/\" + constellation + \"/stars\").then(response => response.json())\n            .then(value => this.setState({...this.state, stars: value}));\n    }\n\n    onStarSelected(star) {\n        fetch(BASE_URL + \"/stars/\" + star.starId).then(response => response.json()).then(value => {\n            this.setState({...this.state, selectedStar: value});\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/*<header className=\"App-header\">*/}\n                {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                {/*<p>Edit <code>src/App.js</code> and save to reload.</p>*/}\n                {/*</header>*/}\n                <div className=\"sidebar-wrapper\">\n                    <div className=\"sidebar\">\n                        <ConstellationList constellations={this.state.constellations} onSelected={constellation => this.onConstellationSelected(constellation)}/>\n                    </div>\n                    <div className=\"sidebar\">\n                        <StarList stars={this.state.stars} onSelected={star => this.onStarSelected(star)}/>\n                    </div>\n                </div>\n                <div className=\"stars-detail-wrapper\">\n                    <StarDetail star={this.state.selectedStar}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}