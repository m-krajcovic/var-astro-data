/**
 * Spring Boot 2.0.x Project Build
 */

// Apply the build scan and Spring Boot 2.0.x plugin

// tag::plugins[]
plugins {
    id "java"
//    id 'com.gradle.build-scan' version '1.16'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id "org.jetbrains.kotlin.plugin.jpa" version "1.2.71"
}
// end::plugins[]

// Add the repository for dependency resolution
repositories {
    jcenter()
}

// Add Spring Boot BOM and dependencies for the Spring Boot Starter Web/Test

// tag::dependencies[]
dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.0.5.RELEASE'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlin:kotlin-noarg"
    compile "mysql:mysql-connector-java:5.1.13"
}
// end::dependencies[]

// Define the main class used for the executable artifacts

// tag::mainClassName[]
bootJar {
    mainClassName = 'cz.astro.var.data.hello.App'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
// end::mainClassName[]

// Configure the Gradle's Build Scan plugin

// tag::buildScan[]
//buildScan {
//
//    // always accept the terms of service
//    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
//    termsOfServiceAgree = 'yes'
//
//    // always publish a build scan
//    publishAlways()
//}
// end::buildScan[]
